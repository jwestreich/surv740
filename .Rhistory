knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(stats)
library(markdown)
population <- rnorm(10000, mean = 10, sd = sqrt(2))
sample_data <- sample(population, 100)
sample_mean <- mean(sample_data)
sample_se <- sd(sample_data) / sqrt(100)
ci_lower <- sample_mean - qt(0.975, df = 99) * sample_se
ci_upper <- sample_mean + qt(0.975, df = 99) * sample_se
list(sample_mean = sample_mean, sample_se = sample_se, ci_lower = ci_lower, ci_upper = ci_upper)
sampling_means <- vector("numeric", 1000)
sampling_vars <- vector("numeric", 1000)
for (i in 1:1000) {
sample_data <- sample(population, 100)
sampling_means[i] <- mean(sample_data)
sampling_vars[i] <- var(sample_data)
}
sampling_means_df <- tibble(mean = sampling_means)
sampling_vars_df <- tibble(variance = sampling_vars)
ggplot(sampling_means_df, aes(x = mean)) +
geom_histogram(binwidth = 0.1, fill = "blue", alpha = 0.7) +
ggtitle("Sampling Distribution of the Mean")
ggplot(sampling_vars_df, aes(x = variance)) +
geom_histogram(binwidth = 0.1, fill = "red", alpha = 0.7) +
ggtitle("Sampling Distribution of the Variance")
mean_percentiles <- quantile(sampling_means, c(0.025, 0.975))
list(mean_2.5_percentile = mean_percentiles[1], mean_97.5_percentile = mean_percentiles[2])
simulate_coin_toss <- function(n) {
sample(c("Heads", "Tails"), n, replace = TRUE)
}
results <- simulate_coin_toss(10000)
count_results <- table(results)
count_results
results_7_tosses <- simulate_coin_toss(7)
count_results_7_tosses <- table(results_7_tosses)
estimated_prob_heads_7 <- count_results_7_tosses["Heads"] / 7
estimated_prob_heads_7
results_7001_tosses <- simulate_coin_toss(7001)
count_results_7001_tosses <- table(results_7001_tosses)
estimated_prob_heads_7001 <- count_results_7001_tosses["Heads"] / 7001
estimated_prob_heads_7001
pt3_samples <- tibble(
x1 = c(4, 4, 4, 6, 6, 38),
x2 = c(6, 38, 72, 38, 72, 72)
)
pt3_samples<-pt3_samples%>%
mutate(arithmetic_mean=(x1+x2)/2)%>%
mutate(harmonic_mean=(2/((1/x1)+(1/x2))))%>%
mutate(geometric_mean=sqrt(x1*x2))
pt3_samples
pt3_pop <- c(4, 6, 38, 72)
pop_arithmetic <- mean(pt3_pop)
pop_harmonic <- length(pt3_pop) / sum(1 / pt3_pop)
pop_geometric <- exp(mean(log(pt3_pop)))
pt3_samples<-pt3_samples%>%
mutate(arithmetic_bias=arithmetic_mean-pop_arithmetic)%>%
mutate(harmonic_bias=harmonic_mean-pop_harmonic)%>%
mutate(geometric_bias=geometric_mean-pop_geometric)
bias_summary<-pt3_samples%>%
summarise(arithmetic_bias=mean(arithmetic_bias),
harmonic_bias=mean(harmonic_bias),
geometric_bias=mean(geometric_bias))
bias_summary
pt3_samples<-pt3_samples%>%
mutate(arithmetic_variance=(arithmetic_mean-mean(arithmetic_mean))^2)%>%
mutate(harmonic_variance=(harmonic_mean-mean(harmonic_mean))^2)%>%
mutate(geometric_variance=(geometric_mean-mean(geometric_mean))^2)
variance_summary<-pt3_samples%>%
summarise(arithmetic_variance=mean(arithmetic_variance),
harmonic_variance=mean(harmonic_variance),
geometric_variance=mean(geometric_variance))
variance_summary
pt3_samples<-pt3_samples%>%
mutate(arithmetic_mse=(arithmetic_mean-mean(arithmetic_mean))^2)%>%
mutate(harmonic_mse=(harmonic_mean-mean(arithmetic_mean))^2)%>%
mutate(geometric_mse=(geometric_mean-mean(arithmetic_mean))^2)
mse_summary<-pt3_samples%>%
summarise(arithmetic_mse=mean(arithmetic_mse),
harmonic_mse=mean(harmonic_mse),
geometric_mse=mean(geometric_mse))
mse_summary
pt3f_samples <- tibble(
x1 = c(4, 4, 4, 8, 8, 10),
x2 = c(8, 10, 12, 10, 12, 12)
)
pt3f_samples<-pt3f_samples%>%
mutate(arithmetic_mean=(x1+x2)/2)%>%
mutate(harmonic_mean=(2/((1/x1)+(1/x2))))%>%
mutate(geometric_mean=sqrt(x1*x2))
pt3f_samples
pt3f_pop <- c(4, 8, 10, 12)
pop_arithmetic <- mean(pt3f_pop)
pop_harmonic <- length(pt3f_pop) / sum(1 / pt3f_pop)
pop_geometric <- exp(mean(log(pt3f_pop)))
pt3f_samples<-pt3f_samples%>%
mutate(arithmetic_bias=arithmetic_mean-pop_arithmetic)%>%
mutate(harmonic_bias=harmonic_mean-pop_harmonic)%>%
mutate(geometric_bias=geometric_mean-pop_geometric)
bias_summary<-pt3f_samples%>%
summarise(arithmetic_bias=mean(arithmetic_bias),
harmonic_bias=mean(harmonic_bias),
geometric_bias=mean(geometric_bias))
bias_summary
pt3f_samples<-pt3f_samples%>%
mutate(arithmetic_variance=(arithmetic_mean-mean(arithmetic_mean))^2)%>%
mutate(harmonic_variance=(harmonic_mean-mean(harmonic_mean))^2)%>%
mutate(geometric_variance=(geometric_mean-mean(geometric_mean))^2)
variance_summary<-pt3f_samples%>%
summarise(arithmetic_variance=mean(arithmetic_variance),
harmonic_variance=mean(harmonic_variance),
geometric_variance=mean(geometric_variance))
variance_summary
pt3f_samples<-pt3f_samples%>%
mutate(arithmetic_mse=(arithmetic_mean-mean(arithmetic_mean))^2)%>%
mutate(harmonic_mse=(harmonic_mean-mean(arithmetic_mean))^2)%>%
mutate(geometric_mse=(geometric_mean-mean(arithmetic_mean))^2)
mse_summary<-pt3f_samples%>%
summarise(arithmetic_mse=mean(arithmetic_mse),
harmonic_mse=mean(harmonic_mse),
geometric_mse=mean(geometric_mse))
mse_summary
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(stats)
library(markdown)
population <- rnorm(10000, mean = 10, sd = sqrt(2))
sample_data <- sample(population, 100)
sample_mean <- mean(sample_data)
sample_se <- sd(sample_data) / sqrt(100)
ci_lower <- sample_mean - qt(0.975, df = 99) * sample_se
ci_upper <- sample_mean + qt(0.975, df = 99) * sample_se
list(sample_mean = sample_mean, sample_se = sample_se, ci_lower = ci_lower, ci_upper = ci_upper)
sampling_means <- vector("numeric", 1000)
sampling_vars <- vector("numeric", 1000)
for (i in 1:1000) {
sample_data <- sample(population, 100)
sampling_means[i] <- mean(sample_data)
sampling_vars[i] <- var(sample_data)
}
sampling_means_df <- tibble(mean = sampling_means)
sampling_vars_df <- tibble(variance = sampling_vars)
ggplot(sampling_means_df, aes(x = mean)) +
geom_histogram(binwidth = 0.1, fill = "blue", alpha = 0.7) +
ggtitle("Sampling Distribution of the Mean")
ggplot(sampling_vars_df, aes(x = variance)) +
geom_histogram(binwidth = 0.1, fill = "red", alpha = 0.7) +
ggtitle("Sampling Distribution of the Variance")
mean_percentiles <- quantile(sampling_means, c(0.025, 0.975))
list(mean_2.5_percentile = mean_percentiles[1], mean_97.5_percentile = mean_percentiles[2])
simulate_coin_toss <- function(n) {
sample(c("Heads", "Tails"), n, replace = TRUE)
}
results <- simulate_coin_toss(10000)
count_results <- table(results)
count_results
results_7_tosses <- simulate_coin_toss(7)
count_results_7_tosses <- table(results_7_tosses)
estimated_prob_heads_7 <- count_results_7_tosses["Heads"] / 7
estimated_prob_heads_7
results_7001_tosses <- simulate_coin_toss(7001)
count_results_7001_tosses <- table(results_7001_tosses)
estimated_prob_heads_7001 <- count_results_7001_tosses["Heads"] / 7001
estimated_prob_heads_7001
pt3_samples <- tibble(
x1 = c(4, 4, 4, 6, 6, 38),
x2 = c(6, 38, 72, 38, 72, 72)
)
pt3_samples<-pt3_samples%>%
mutate(arithmetic_mean=(x1+x2)/2)%>%
mutate(harmonic_mean=(2/((1/x1)+(1/x2))))%>%
mutate(geometric_mean=sqrt(x1*x2))
pt3_samples
pt3_pop <- c(4, 6, 38, 72)
pop_arithmetic <- mean(pt3_pop)
pop_harmonic <- length(pt3_pop) / sum(1 / pt3_pop)
pop_geometric <- exp(mean(log(pt3_pop)))
pt3_samples<-pt3_samples%>%
mutate(arithmetic_bias=arithmetic_mean-pop_arithmetic)%>%
mutate(harmonic_bias=harmonic_mean-pop_harmonic)%>%
mutate(geometric_bias=geometric_mean-pop_geometric)
bias_summary<-pt3_samples%>%
summarise(arithmetic_bias=mean(arithmetic_bias),
harmonic_bias=mean(harmonic_bias),
geometric_bias=mean(geometric_bias))
bias_summary
pt3_samples<-pt3_samples%>%
mutate(arithmetic_variance=(arithmetic_mean-mean(arithmetic_mean))^2)%>%
mutate(harmonic_variance=(harmonic_mean-mean(harmonic_mean))^2)%>%
mutate(geometric_variance=(geometric_mean-mean(geometric_mean))^2)
variance_summary<-pt3_samples%>%
summarise(arithmetic_variance=mean(arithmetic_variance),
harmonic_variance=mean(harmonic_variance),
geometric_variance=mean(geometric_variance))
variance_summary
pt3_samples<-pt3_samples%>%
mutate(arithmetic_mse=(arithmetic_mean-mean(arithmetic_mean))^2)%>%
mutate(harmonic_mse=(harmonic_mean-mean(arithmetic_mean))^2)%>%
mutate(geometric_mse=(geometric_mean-mean(arithmetic_mean))^2)
mse_summary<-pt3_samples%>%
summarise(arithmetic_mse=mean(arithmetic_mse),
harmonic_mse=mean(harmonic_mse),
geometric_mse=mean(geometric_mse))
mse_summary
pt3f_samples <- tibble(
x1 = c(4, 4, 4, 8, 8, 10),
x2 = c(8, 10, 12, 10, 12, 12)
)
pt3f_samples<-pt3f_samples%>%
mutate(arithmetic_mean=(x1+x2)/2)%>%
mutate(harmonic_mean=(2/((1/x1)+(1/x2))))%>%
mutate(geometric_mean=sqrt(x1*x2))
pt3f_samples
pt3f_pop <- c(4, 8, 10, 12)
pop_arithmetic <- mean(pt3f_pop)
pop_harmonic <- length(pt3f_pop) / sum(1 / pt3f_pop)
pop_geometric <- exp(mean(log(pt3f_pop)))
pt3f_samples<-pt3f_samples%>%
mutate(arithmetic_bias=arithmetic_mean-pop_arithmetic)%>%
mutate(harmonic_bias=harmonic_mean-pop_harmonic)%>%
mutate(geometric_bias=geometric_mean-pop_geometric)
bias_summary<-pt3f_samples%>%
summarise(arithmetic_bias=mean(arithmetic_bias),
harmonic_bias=mean(harmonic_bias),
geometric_bias=mean(geometric_bias))
bias_summary
pt3f_samples<-pt3f_samples%>%
mutate(arithmetic_variance=(arithmetic_mean-mean(arithmetic_mean))^2)%>%
mutate(harmonic_variance=(harmonic_mean-mean(harmonic_mean))^2)%>%
mutate(geometric_variance=(geometric_mean-mean(geometric_mean))^2)
variance_summary<-pt3f_samples%>%
summarise(arithmetic_variance=mean(arithmetic_variance),
harmonic_variance=mean(harmonic_variance),
geometric_variance=mean(geometric_variance))
variance_summary
pt3f_samples<-pt3f_samples%>%
mutate(arithmetic_mse=(arithmetic_mean-mean(arithmetic_mean))^2)%>%
mutate(harmonic_mse=(harmonic_mean-mean(arithmetic_mean))^2)%>%
mutate(geometric_mse=(geometric_mean-mean(arithmetic_mean))^2)
mse_summary<-pt3f_samples%>%
summarise(arithmetic_mse=mean(arithmetic_mse),
harmonic_mse=mean(harmonic_mse),
geometric_mse=mean(geometric_mse))
mse_summary
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(stats)
library(markdown)
population <- rnorm(10000, mean = 10, sd = sqrt(2))
sample_data <- sample(population, 100)
sample_mean <- mean(sample_data)
sample_se <- sd(sample_data) / sqrt(100)
ci_lower <- sample_mean - qt(0.975, df = 99) * sample_se
ci_upper <- sample_mean + qt(0.975, df = 99) * sample_se
list(sample_mean = sample_mean, sample_se = sample_se, ci_lower = ci_lower, ci_upper = ci_upper)
sampling_means <- vector("numeric", 1000)
sampling_vars <- vector("numeric", 1000)
for (i in 1:1000) {
sample_data <- sample(population, 100)
sampling_means[i] <- mean(sample_data)
sampling_vars[i] <- var(sample_data)
}
sampling_means_df <- tibble(mean = sampling_means)
sampling_vars_df <- tibble(variance = sampling_vars)
ggplot(sampling_means_df, aes(x = mean)) +
geom_histogram(binwidth = 0.1, fill = "blue", alpha = 0.7) +
ggtitle("Sampling Distribution of the Mean")
ggplot(sampling_vars_df, aes(x = variance)) +
geom_histogram(binwidth = 0.1, fill = "red", alpha = 0.7) +
ggtitle("Sampling Distribution of the Variance")
mean_percentiles <- quantile(sampling_means, c(0.025, 0.975))
list(mean_2.5_percentile = mean_percentiles[1], mean_97.5_percentile = mean_percentiles[2])
simulate_coin_toss <- function(n) {
sample(c("Heads", "Tails"), n, replace = TRUE)
}
results <- simulate_coin_toss(10000)
count_results <- table(results)
count_results
results_7_tosses <- simulate_coin_toss(7)
count_results_7_tosses <- table(results_7_tosses)
estimated_prob_heads_7 <- count_results_7_tosses["Heads"] / 7
estimated_prob_heads_7
results_7001_tosses <- simulate_coin_toss(7001)
count_results_7001_tosses <- table(results_7001_tosses)
estimated_prob_heads_7001 <- count_results_7001_tosses["Heads"] / 7001
estimated_prob_heads_7001
pt3_samples <- tibble(
x1 = c(4, 4, 4, 6, 6, 38),
x2 = c(6, 38, 72, 38, 72, 72)
)
pt3_samples<-pt3_samples%>%
mutate(arithmetic_mean=(x1+x2)/2)%>%
mutate(harmonic_mean=(2/((1/x1)+(1/x2))))%>%
mutate(geometric_mean=sqrt(x1*x2))
pt3_samples
pt3_pop <- c(4, 6, 38, 72)
pop_arithmetic <- mean(pt3_pop)
pop_harmonic <- length(pt3_pop) / sum(1 / pt3_pop)
pop_geometric <- exp(mean(log(pt3_pop)))
pt3_samples<-pt3_samples%>%
mutate(arithmetic_bias=arithmetic_mean-pop_arithmetic)%>%
mutate(harmonic_bias=harmonic_mean-pop_harmonic)%>%
mutate(geometric_bias=geometric_mean-pop_geometric)
bias_summary<-pt3_samples%>%
summarise(arithmetic_bias=mean(arithmetic_bias),
harmonic_bias=mean(harmonic_bias),
geometric_bias=mean(geometric_bias))
bias_summary
pt3_samples<-pt3_samples%>%
mutate(arithmetic_variance=(arithmetic_mean-mean(arithmetic_mean))^2)%>%
mutate(harmonic_variance=(harmonic_mean-mean(harmonic_mean))^2)%>%
mutate(geometric_variance=(geometric_mean-mean(geometric_mean))^2)
variance_summary<-pt3_samples%>%
summarise(arithmetic_variance=mean(arithmetic_variance),
harmonic_variance=mean(harmonic_variance),
geometric_variance=mean(geometric_variance))
variance_summary
pt3_samples<-pt3_samples%>%
mutate(arithmetic_mse=(arithmetic_mean-mean(arithmetic_mean))^2)%>%
mutate(harmonic_mse=(harmonic_mean-mean(arithmetic_mean))^2)%>%
mutate(geometric_mse=(geometric_mean-mean(arithmetic_mean))^2)
mse_summary<-pt3_samples%>%
summarise(arithmetic_mse=mean(arithmetic_mse),
harmonic_mse=mean(harmonic_mse),
geometric_mse=mean(geometric_mse))
mse_summary
pt3f_samples <- tibble(
x1 = c(4, 4, 4, 8, 8, 10),
x2 = c(8, 10, 12, 10, 12, 12)
)
pt3f_samples<-pt3f_samples%>%
mutate(arithmetic_mean=(x1+x2)/2)%>%
mutate(harmonic_mean=(2/((1/x1)+(1/x2))))%>%
mutate(geometric_mean=sqrt(x1*x2))
pt3f_samples
pt3f_pop <- c(4, 8, 10, 12)
pop_arithmetic <- mean(pt3f_pop)
pop_harmonic <- length(pt3f_pop) / sum(1 / pt3f_pop)
pop_geometric <- exp(mean(log(pt3f_pop)))
pt3f_samples<-pt3f_samples%>%
mutate(arithmetic_bias=arithmetic_mean-pop_arithmetic)%>%
mutate(harmonic_bias=harmonic_mean-pop_harmonic)%>%
mutate(geometric_bias=geometric_mean-pop_geometric)
bias_summary<-pt3f_samples%>%
summarise(arithmetic_bias=mean(arithmetic_bias),
harmonic_bias=mean(harmonic_bias),
geometric_bias=mean(geometric_bias))
bias_summary
pt3f_samples<-pt3f_samples%>%
mutate(arithmetic_variance=(arithmetic_mean-mean(arithmetic_mean))^2)%>%
mutate(harmonic_variance=(harmonic_mean-mean(harmonic_mean))^2)%>%
mutate(geometric_variance=(geometric_mean-mean(geometric_mean))^2)
variance_summary<-pt3f_samples%>%
summarise(arithmetic_variance=mean(arithmetic_variance),
harmonic_variance=mean(harmonic_variance),
geometric_variance=mean(geometric_variance))
variance_summary
pt3f_samples<-pt3f_samples%>%
mutate(arithmetic_mse=(arithmetic_mean-mean(arithmetic_mean))^2)%>%
mutate(harmonic_mse=(harmonic_mean-mean(arithmetic_mean))^2)%>%
mutate(geometric_mse=(geometric_mean-mean(arithmetic_mean))^2)
mse_summary<-pt3f_samples%>%
summarise(arithmetic_mse=mean(arithmetic_mse),
harmonic_mse=mean(harmonic_mse),
geometric_mse=mean(geometric_mse))
mse_summary
